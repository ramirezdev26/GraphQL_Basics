enum Level {
    principiante
    intermedio
    avanzado
}

union GlobalSearch = Course | Student | Monitor 

type Course {
    _id: ID!
    title: String!
    teacher: String
    description: String!
    topic: String
    people: [Person]
    level: Level
}

interface Person {
  _id: ID!
  name: String!
  email: String!
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person {
  _id: ID!
  name: String!
  email: String!
  phone: String
}

type Query {
  "Devuelve todos cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(id: ID!): Course
  "Devuelve todas las personas"
  getPeople: [Person]
  "Devuelve una persona"
  getPerson(id: ID!): Person
  "Ejecuta una busqueda global"
  searchItems(keywords: String!) : [GlobalSearch]
    }

input CourseInput {
    title: String!
    teacher: String
    description: String!
    topic: String
    level: Level
}

input CourseEditInput {
    title: String
    teacher: String
    description: String
    topic: String
}

input PersonInput {
  name: String!
  email: String!
  phone: String
  avatar: String
}

input PersonEditInput {
  name: String
  email: String
  phone: String
  avatar: String
}

type Mutation {
    "Crea un curso"
    createCourse(input: CourseInput!): Course
    "Edita un curso"
    editCourse(_id: ID!, input: CourseEditInput): Course
    "Elimina un curso"
    deleteCourse(_id: ID!): String
    "Crea una persona"
    createPerson(input: PersonInput!): Person
    "Edita una persona"
    editPerson(_id: ID!, input: PersonEditInput!): Person
    "Elimina una persona"
    deletePerson(_id: ID!): String
    "Agrega una persona a un curso"
    addPeople(courseID: ID!, personID: ID!): Course
}